{
    "openapi": "3.0.0",
    "info": {
        "title": "CarDealer CRUD",
        "description": "API documentation for the CarDealer CRUD application.",
        "license": {
            "name": "MIT License",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/cars": {
            "get": {
                "tags": [
                    "Cars"
                ],
                "summary": "Get list of cars",
                "operationId": "getCars",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Cars"
                ],
                "summary": "Create a new car",
                "operationId": "storeCar",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/carsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/cars/create": {
            "get": {
                "tags": [
                    "Cars"
                ],
                "summary": "Show the car creation form",
                "operationId": "createCar",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/cars/{car}": {
            "get": {
                "tags": [
                    "Cars"
                ],
                "summary": "Show the car details",
                "operationId": "showCar",
                "parameters": [
                    {
                        "name": "car",
                        "in": "path",
                        "description": "ID of the car",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "Cars"
                ],
                "summary": "Update a car",
                "operationId": "updateCar",
                "parameters": [
                    {
                        "name": "car",
                        "in": "path",
                        "description": "ID of the car",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/carsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Cars"
                ],
                "summary": "Delete a car",
                "operationId": "deleteCar",
                "parameters": [
                    {
                        "name": "car",
                        "in": "path",
                        "description": "ID of the car",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/cars/edit/{car}": {
            "get": {
                "tags": [
                    "Cars"
                ],
                "summary": "Show the car edit form",
                "operationId": "editCarForm",
                "parameters": [
                    {
                        "name": "car",
                        "in": "path",
                        "description": "ID of the car",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/search": {
            "post": {
                "tags": [
                    "Cars"
                ],
                "summary": "Search for cars",
                "operationId": "searchCars",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchCarsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/": {
            "get": {
                "tags": [
                    "Home"
                ],
                "summary": "Get home page with cars list for carousel",
                "description": "Show the application dashboard.",
                "operationId": "getHome",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/users/list": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "description": "Display a paginated list of users.",
                "operationId": "getUsers",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/create": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Show the user creation form",
                "description": "Show the user creation form.",
                "operationId": "createUserForm",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/users": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "description": "Store a newly created user in storage.",
                "operationId": "storeUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/userRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/users/{user}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Show the user edit form",
                "description": "Show the user edit form.",
                "operationId": "editUserForm",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update a user",
                "description": "Update the specified user in storage.",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/userRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "description": "Remove the specified user from storage.",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/roleChange": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Change the role of a user",
                "description": "Change the role of the specified user.",
                "operationId": "roleChangeUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleChangeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "SearchCarsRequest": {
                "title": "Search Cars Request",
                "description": "Request schema for searching cars",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "model": {
                        "type": "string"
                    },
                    "fuelType": {
                        "type": "string"
                    },
                    "yearOfProduction": {
                        "type": "integer"
                    },
                    "transmission": {
                        "type": "string"
                    },
                    "driveType": {
                        "type": "string"
                    },
                    "price_min": {
                        "type": "number"
                    },
                    "price_max": {
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "RoleChangeRequest": {
                "title": "Role Change Request",
                "description": "Request schema for changing user role",
                "properties": {
                    "role": {
                        "description": "User role. Possible values: admin, user.",
                        "type": "string",
                        "enum": [
                            "admin",
                            "user"
                        ]
                    }
                },
                "type": "object"
            },
            "carsRequest": {
                "title": "Cars Request",
                "description": "Request body for creating or updating a car",
                "properties": {
                    "name": {
                        "description": "The name of the car",
                        "type": "string",
                        "example": "Toyota"
                    },
                    "model": {
                        "description": "The model of the car",
                        "type": "string",
                        "example": "Camry"
                    },
                    "fuelType": {
                        "description": "The type of fuel used by the car",
                        "type": "string",
                        "example": "Gasoline"
                    },
                    "yearOfProduction": {
                        "description": "The year of production of the car",
                        "type": "integer",
                        "example": 2022
                    },
                    "transmission": {
                        "description": "The type of transmission of the car",
                        "type": "string",
                        "example": "Automatic"
                    },
                    "driveType": {
                        "description": "The type of drive of the car",
                        "type": "string",
                        "example": "AWD"
                    },
                    "addInfo": {
                        "description": "Additional information about the car",
                        "type": "string",
                        "example": "Great condition, low mileage"
                    },
                    "image_path": {
                        "description": "Image of the car",
                        "type": "string",
                        "format": "binary"
                    },
                    "price": {
                        "description": "The price of the car",
                        "type": "number",
                        "format": "float",
                        "example": 25000.99
                    }
                },
                "type": "object"
            },
            "userRequest": {
                "title": "User Request",
                "description": "Request body for creating or updating a user",
                "properties": {
                    "name": {
                        "description": "The name of the user",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "description": "The email address of the user",
                        "type": "string",
                        "example": "johndoe@example.com"
                    },
                    "password": {
                        "description": "The password of the user",
                        "type": "string",
                        "example": "password123"
                    },
                    "password_confirmation": {
                        "description": "Confirmation of the user's password",
                        "type": "string",
                        "example": "password123"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User Model",
                "description": "User model",
                "properties": {
                    "id": {
                        "description": "ID of the user",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of the user",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email of the user",
                        "type": "string"
                    },
                    "role": {
                        "description": "Role of the user",
                        "type": "string",
                        "enum": [
                            "admin",
                            "user"
                        ]
                    },
                    "password": {
                        "description": "Password of the user",
                        "type": "string"
                    },
                    "email_verified_at": {
                        "description": "Date and time of email verification",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "description": "Date and time of user creation",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Date and time of user update",
                        "type": "string",
                        "format": "date-time"
                    },
                    "remember_token": {
                        "description": "Remember token for the user",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Cars": {
                "title": "Cars Model",
                "description": "Cars model",
                "properties": {
                    "id": {
                        "description": "ID of the car",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of the car",
                        "type": "string"
                    },
                    "model": {
                        "description": "Model of the car",
                        "type": "string"
                    },
                    "fuelType": {
                        "description": "Fuel type of the car",
                        "type": "string",
                        "enum": [
                            "Petrol",
                            "LPG",
                            "Diesel",
                            "Electric"
                        ]
                    },
                    "yearOfProduction": {
                        "description": "Year of production of the car",
                        "type": "integer"
                    },
                    "transmission": {
                        "description": "Transmission type of the car",
                        "type": "string"
                    },
                    "driveType": {
                        "description": "Drive type of the car",
                        "type": "string"
                    },
                    "addInfo": {
                        "description": "Additional information about the car",
                        "type": "string"
                    },
                    "price": {
                        "description": "Price of the car",
                        "type": "number",
                        "format": "float"
                    }
                },
                "type": "object"
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "tags": [
        {
            "name": "Users",
            "description": "Endpoints related to managing users"
        },
        {
            "name": "Cars",
            "description": "Endpoints related to managing cars"
        }
    ]
}